<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="About" xml:space="preserve">
    <value>About Kriptal</value>
  </data>
  <data name="AddContact" xml:space="preserve">
    <value>Add contact</value>
  </data>
  <data name="AttachedFile" xml:space="preserve">
    <value>Attachment:</value>
  </data>
  <data name="AttachFile" xml:space="preserve">
    <value>Attach File</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="ContactFromKriptal" xml:space="preserve">
    <value>New contact in Kriptal</value>
  </data>
  <data name="Contacts" xml:space="preserve">
    <value>New Kriptal message</value>
  </data>
  <data name="Email" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="EmailRequired" xml:space="preserve">
    <value>Enter your email</value>
  </data>
  <data name="Enter" xml:space="preserve">
    <value>Login</value>
  </data>
  <data name="Error" xml:space="preserve">
    <value>Action not completed</value>
  </data>
  <data name="FromTitle" xml:space="preserve">
    <value>You got a message in Kriptal</value>
  </data>
  <data name="Home" xml:space="preserve">
    <value>Home</value>
  </data>
  <data name="IncorrectPassword" xml:space="preserve">
    <value>Incorrect password</value>
  </data>
  <data name="Message" xml:space="preserve">
    <value>Message:</value>
  </data>
  <data name="MessageFrom" xml:space="preserve">
    <value>Message from </value>
  </data>
  <data name="MustBeStrongPassword" xml:space="preserve">
    <value>The password must contain uppercase, lowercase, symbols, numbers, letters, and have a minimum length of 10</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="NameRequired" xml:space="preserve">
    <value>Enter your name</value>
  </data>
  <data name="NewContact" xml:space="preserve">
    <value>New contact</value>
  </data>
  <data name="OK" xml:space="preserve">
    <value>OK</value>
  </data>
  <data name="Password" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="PasswordDontMatch" xml:space="preserve">
    <value>Password field and repeat field must match</value>
  </data>
  <data name="PublicKey" xml:space="preserve">
    <value>Public Key</value>
  </data>
  <data name="QrScanInfo" xml:space="preserve">
    <value>Ask others users to scan this QR code with Kriptal to add you as a contact</value>
  </data>
  <data name="RepeatPassword" xml:space="preserve">
    <value>Repeat password</value>
  </data>
  <data name="ResetAccount" xml:space="preserve">
    <value>Reset account</value>
  </data>
  <data name="ResetCompleted" xml:space="preserve">
    <value>Your account has been reset</value>
  </data>
  <data name="ResetMessage" xml:space="preserve">
    <value>If you don't remember your password, the only thing to do is a total reset of your account

Your contacts list will be erased and you must send your new Kriptal Contact to all your contacts

This is for security reasons. Learn more in About tab or at kriptal.org</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="ScanContact" xml:space="preserve">
    <value>Scan QR of contact</value>
  </data>
  <data name="Send" xml:space="preserve">
    <value>Send</value>
  </data>
  <data name="SetPassword" xml:space="preserve">
    <value>Your password must contain uppercase, lowercase, symbols, numbers, letters, and have a minimum length of 10 characters
Example: {0}

If you forget this password, your data and messages are lost</value>
  </data>
  <data name="ShareContact" xml:space="preserve">
    <value>Send my contact</value>
  </data>
  <data name="Text" xml:space="preserve">
    <value>Text</value>
  </data>
  <data name="Title" xml:space="preserve">
    <value>Kriptal</value>
  </data>
  <data name="To" xml:space="preserve">
    <value> to </value>
  </data>
  <data name="OpenAttachment" xml:space="preserve">
    <value>Save Attachment</value>
  </data>
</root>